"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const authMiddleware_1 = require("../../middlewares/authMiddleware");
const adminControllers_1 = require("../../controllers/adminControllers");
const multerMiddleware_1 = __importDefault(require("../../middlewares/multerMiddleware"));
const router = express_1.default.Router();
router.route('/check-payment').get(authMiddleware_1.isAdmin, adminControllers_1.checkAllLoadBalanceScreenshot);
router.route('/update-balance/:orderId').patch(authMiddleware_1.isAdmin, adminControllers_1.loadCoinToUserWallet);
router.route('/get-alluser').get(authMiddleware_1.isAdmin, adminControllers_1.getAllUserDetails);
router.route('/get-allfforder').get(authMiddleware_1.isAdminSubAdmin, adminControllers_1.allFfOrderControllers);
router.route('/complete-fforder/:orderId').post(authMiddleware_1.isAdminSubAdmin, adminControllers_1.completeFfOrder);
router.route('/delete-user/:userId').delete(authMiddleware_1.isAdmin, adminControllers_1.deleteUser);
router.route('/change-role/:userId').patch(authMiddleware_1.isAdmin, adminControllers_1.changeUserRole);
router.route('/add-coin/:userId').patch(authMiddleware_1.isAdmin, adminControllers_1.addCoinToUser);
router.route('/remove-coin/:userId').patch(authMiddleware_1.isAdmin, adminControllers_1.removeCoinFromUser);
router.route('/create-ff-tournament').post(authMiddleware_1.isAdminSubAdmin, adminControllers_1.createFreeFireTournament);
router.route('/update-roomid-password/:tournamentId').patch(authMiddleware_1.isAdminSubAdmin, adminControllers_1.addRoomIdAndPassword);
router.route('/get-all-tournament').get(authMiddleware_1.isAdminSubAdmin, adminControllers_1.getAllTournament);
router.route('/delete-tournament/:tournamentId').delete(authMiddleware_1.isAdminSubAdmin, adminControllers_1.deleteTournament);
router.route('/make-winner/:winnerId').patch(authMiddleware_1.isAdminSubAdmin, adminControllers_1.makeWinner);
router.route('/cancel-tournament/:tournamentId').post(authMiddleware_1.isAdminSubAdmin, adminControllers_1.cancelTournament);
router.route('/add-ff-toupup-rate').patch(authMiddleware_1.isAdminSubAdmin, adminControllers_1.addFfTopupList);
router.route('/withdrawal-requests').get(authMiddleware_1.isAdmin, adminControllers_1.getAllWithdrawalRequests);
router.route('/add-banner').post(authMiddleware_1.isAdminSubAdmin, multerMiddleware_1.default.single("banner"), adminControllers_1.addBannerControllers);
router.route('/delete-banner').delete(authMiddleware_1.isAdmin, adminControllers_1.deleteBanner);
exports.default = router;
